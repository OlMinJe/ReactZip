{"version":3,"sources":["index.js"],"names":["divToggle","document","querySelector","counter","btnIncrease","btnDecrease","TOGGLE_SWITCH","INCREASE","DECREASE","toggleSwitch","type","increase","difference","decrease","initialState","toggle","reducer","state","arguments","length","undefined","action","_objectSpread","store","legacy_createStore","render","getState","classList","add","remove","innerText","subscribe","onClick","dispatch"],"mappings":";;;;;;AAAA;AACA,IAAMA,SAAS,GAAGC,QAAQ,CAACC,aAAa,CAAC,SAAS,CAAC;AACnD,IAAMC,OAAO,GAAGF,QAAQ,CAACC,aAAa,CAAC,IAAI,CAAC;AAC5C,IAAME,WAAW,GAAGH,QAAQ,CAACC,aAAa,CAAC,WAAW,CAAC;AACvD,IAAMG,WAAW,GAAGJ,QAAQ,CAACC,aAAa,CAAC,WAAW,CAAC;AACvD;AACA,IAAMI,aAAa,GAAG,eAAe;AACrC,IAAMC,QAAQ,GAAG,UAAU;AAC3B,IAAMC,QAAQ,GAAG,UAAU;AAC3B;AACA,IAAMC,YAAY,GAAG,SAAfA,YAAYA,CAAA;EAAA,OAAU;IAAEC,IAAI,EAAEJ;EAAc,CAAC;AAAA,CAAC;AACpD,IAAMK,QAAQ,GAAG,SAAXA,QAAQA,CAAIC,UAAU;EAAA,OAAM;IAAEF,IAAI,EAAEH,QAAQ;IAAEK,UAAU,EAAVA;EAAW,CAAC;AAAA,CAAC;AACjE,IAAMC,QAAQ,GAAG,SAAXA,QAAQA,CAAA;EAAA,OAAU;IAAEH,IAAI,EAAEF;EAAS,CAAC;AAAA,CAAC;AAC3C;AACA,IAAMM,YAAY,GAAG;EACnBC,MAAM,EAAE,KAAK;EACbZ,OAAO,EAAE;AACX,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA,SAASa,OAAOA,CAAA,EAA+B;EAAA,IAA9BC,KAAK,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAGJ,YAAY;EAAA,IAAEO,MAAM,GAAAH,SAAA,CAAAC,MAAA,OAAAD,SAAA,MAAAE,SAAA;EAC3C,QAAQC,MAAM,CAACX,IAAI;IACjB,KAAKJ,aAAa;MAChB,OAAAgB,aAAA,CAAAA,aAAA,KACKL,KAAK;QAAE;QACVF,MAAM,EAAE,CAACE,KAAK,CAACF;MAAM;IAEzB,KAAKR,QAAQ;MACX,OAAAe,aAAA,CAAAA,aAAA,KACKL,KAAK;QACRd,OAAO,EAAEc,KAAK,CAACd,OAAO,GAAGkB,MAAM,CAACT;MAAU;IAE9C,KAAKJ,QAAQ;MACX,OAAAc,aAAA,CAAAA,aAAA,KACKL,KAAK;QACRd,OAAO,EAAEc,KAAK,CAACd,OAAO,GAAG;MAAC;IAE9B;MACE,OAAOc,KAAK;EAChB;AACF;;AAEA;AACA,IAAMM,KAAK,GAAGC,kBAAkB,CAACR,OAAO,CAAC;;AAEzC;AACA;AACA,IAAMS,MAAM,GAAG,SAATA,MAAMA,CAAA,EAAS;EACnB,IAAMR,KAAK,GAAGM,KAAK,CAACG,QAAQ,CAAC,CAAC;EAC9B,IAAIT,KAAK,CAACF,MAAM,EAAEf,SAAS,CAAC2B,SAAS,CAACC,GAAG,CAAC,QAAQ,CAAC,CAAC,KAC/C5B,SAAS,CAAC2B,SAAS,CAACE,MAAM,CAAC,QAAQ,CAAC;EACzC1B,OAAO,CAAC2B,SAAS,GAAGb,KAAK,CAACd,OAAO;AACnC,CAAC;;AAED;AACA;AACA;AACA;AACAsB,MAAM,CAAC,CAAC;AACRF,KAAK,CAACQ,SAAS,CAACN,MAAM,CAAC;;AAEvB;AACAzB,SAAS,CAACgC,OAAO,GAAG,YAAM;EACxBT,KAAK,CAACU,QAAQ,CAACxB,YAAY,CAAC,CAAC,CAAC;AAChC,CAAC;AACDL,WAAW,CAAC4B,OAAO,GAAG,YAAM;EAC1BT,KAAK,CAACU,QAAQ,CAACtB,QAAQ,CAAC,CAAC,CAAC,CAAC;AAC7B,CAAC;AACDN,WAAW,CAAC2B,OAAO,GAAG,YAAM;EAC1BT,KAAK,CAACU,QAAQ,CAACpB,QAAQ,CAAC,CAAC,CAAC;AAC5B,CAAC","file":"vanilla-redux.e31bb0bc.js","sourceRoot":"..","sourcesContent":["// DOM 레퍼런스\nconst divToggle = document.querySelector('.toggle');\nconst counter = document.querySelector('h1');\nconst btnIncrease = document.querySelector('#increase');\nconst btnDecrease = document.querySelector('#decrease');\n// 액션 이름\nconst TOGGLE_SWITCH = 'TOGGLE_SWITCH';\nconst INCREASE = 'INCREASE';\nconst DECREASE = 'DECREASE';\n// 액션 생성 함수\nconst toggleSwitch = () => ({ type: TOGGLE_SWITCH });\nconst increase = (difference) => ({ type: INCREASE, difference });\nconst decrease = () => ({ type: DECREASE });\n// 초기값 설정\nconst initialState = {\n  toggle: false,\n  counter: 0,\n};\n\n/** < 리듀서 함수 정의 >\n *  - 리듀서는 변화를 일으키는 함수이다.\n *  - 리듀서에서는 상태의 불변성을 유지하면서 데이터에 변화를 일으켜 주어야 한다.\n *  - state가 undefined일 때는 initialState를 기본값으로 사용\n */\nfunction reducer(state = initialState, action) {\n  switch (action.type) {\n    case TOGGLE_SWITCH:\n      return {\n        ...state, // 불변성 유지를 해주어야 한다.\n        toggle: !state.toggle,\n      };\n    case INCREASE:\n      return {\n        ...state,\n        counter: state.counter + action.difference,\n      };\n    case DECREASE:\n      return {\n        ...state,\n        counter: state.counter - 1,\n      };\n    default:\n      return state;\n  }\n}\n\n// 스토어 생성\nconst store = legacy_createStore(reducer);\n\n// 스토어 내장 함수 사용\n// (1) render\nconst render = () => {\n  const state = store.getState();\n  if (state.toggle) divToggle.classList.add('active');\n  else divToggle.classList.remove('active');\n  counter.innerText = state.counter;\n};\n\n/** < 구독하기 >\n *  - 스토어의 상태가 바뀔 때마다 render 함수가 호출되도록 하기\n *  - 내장함수 subscribe 사용\n */\nrender();\nstore.subscribe(render);\n\n// 디스패치 (액션 발생시키기)\ndivToggle.onClick = () => {\n  store.dispatch(toggleSwitch());\n};\nbtnIncrease.onClick = () => {\n  store.dispatch(increase(1));\n};\nbtnDecrease.onClick = () => {\n  store.dispatch(decrease());\n};\n"]}